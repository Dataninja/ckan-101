# docker-compose build && docker-compose up -d
# If "docker-compose logs ckan" shows DB not ready, run "docker-compose restart ckan" a few times.
version: "3"

volumes:
  ckan_config:
  ckan_home:
  ckan_storage:
  pg_data:
  solr_data:

services:

  ckan:
    #container_name: ckan_core
    build:
      context: src/ckan/
      dockerfile: Dockerfile.py3
      args:
        - CKAN_SITE_URL=${CKAN_SITE_URL}
    depends_on:
      - db
    ports:
      - "0.0.0.0:${CKAN_PORT}:5000"
    environment:
      # Defaults work with linked containers, change to use own Postgres, SolR, Redis or Datapusher
      - CKAN_SQLALCHEMY_URL=postgresql://ckan:${POSTGRES_PASSWORD}@db/ckan
      - CKAN_DATASTORE_WRITE_URL=postgresql://ckan:${POSTGRES_PASSWORD}@db/datastore
      - CKAN_DATASTORE_READ_URL=postgresql://datastore_ro:${DATASTORE_READONLY_PASSWORD}@db/datastore
      - CKAN_SOLR_URL=http://solr:8983/solr/ckan
      - CKAN_REDIS_URL=redis://redis:6379/1
      - CKAN_DATAPUSHER_URL=http://datapusher:8800
      - CKAN_SITE_URL=${CKAN_SITE_URL}
      - CKAN_MAX_UPLOAD_SIZE_MB=${CKAN_MAX_UPLOAD_SIZE_MB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
    # Debug with pdb (example) - Interact with `docker attach $(docker container ls -qf name=ckan)`
    #command: 'python -m pdb /usr/lib/ckan/venv/bin/ckan --config /etc/ckan/production.ini run --host 0.0.0.0 --passthrough-errors'
    #tty: true
    #stdin_open: true
    volumes:
      - ckan_config:/etc/ckan
      - ckan_home:/usr/lib/ckan
      - ckan_storage:/var/lib/ckan
      - ./ckan/production.ini:/etc/ckan/production.ini

  # datapusher:
  #   #container_name: ckan_datapusher
  #   build:
  #     context: src/datapusher/
  #     dockerfile: ${PWD:-.}/datapusher/Dockerfile
  #   ports:
  #     - "${DATAPUSHER_PORT}:8800"

  db:
    #container_name: ckan_db
    build:
      context: src/ckan/
      dockerfile: contrib/docker/postgresql/Dockerfile
      args:
        - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    environment:
      - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/db
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "ckan" ]

  solr:
    #container_name: ckan_solr
    build:
      context: solr/
      dockerfile: Dockerfile
    volumes:
      - solr_data:/opt/solr/server/solr/ckan/data
      - ./solr/schema.xml:/opt/solr/server/solr/configsets/ckan/conf/managed-schema

  redis:
    #container_name: ckan_redis
    image: redis:latest
